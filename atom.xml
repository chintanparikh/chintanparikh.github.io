<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[chintan]]></title>
  <link href="http://chintanparikh.github.io/atom.xml" rel="self"/>
  <link href="http://chintanparikh.github.io/"/>
  <updated>2014-09-25T21:02:29-04:00</updated>
  <id>http://chintanparikh.github.io/</id>
  <author>
    <name><![CDATA[Chintan Parikh]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[How to Start a Startup - Lecture 2 Notes]]></title>
    <link href="http://chintanparikh.github.io/blog/2014/09/25/how-to-start-a-startup-lecture-2-notes/"/>
    <updated>2014-09-25T20:27:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2014/09/25/how-to-start-a-startup-lecture-2-notes</id>
    <content type="html"><![CDATA[<p>How do I identify markets that are growing quickly?
One big advantage that students have. Trust your instincts on this. Young people get older and become the dominant market. What are you using? What are people your age using?</p>

<h2>Team</h2>

<p>Cofounder relationships are the most important in the entire company.#1 cause of early death of startups = cofounder blowups. Finding your cofounder is the most important decision. Students tend to be very bad at this &ndash; they randomly pick people. You wouldn’t hire like this so why choose your cofounder like this?</p>

<p>Meeting cofounders is easiest in college. Also good to work at interesting companies &ndash; google, etc is cofounder rich.
Top 20 most valuable YC companies have at least 2 founders.</p>

<p>What do you look for in cofounders?
Find people that are relentlessly resourceful &ndash; look at PG’s essay.
Look for cofounders that are unflappable, tough, decisive, etc. The model for this in pop culture is James Bond. Find people like James Bond.</p>

<p>Make sure you’ve known your cofounders for a long time. Also true for early hires. Take advantage of school. You need tough and calm cofounders. Obviously also smart, but people don’t prioritize tough and calm, especially if you aren’t. Always need at least a technical cofounder. For YC 2-3 is ideal.</p>

<p>Try not to hire. High employees = complexity, high burn rate, etc. Lean = GOOD. In the beginning, only hire when you desperately need to. Cost of getting an early hire wrong is very high. Often kills company. AirBnB spent 5 months interviewing people before hiring their first employee. Early hires will define your company.</p>

<p>When you’re hiring, you should get the best people. It is very hard to recruit &ndash; the best people have many great options. It can easily take a year to recruit. Convince people that your mission is extremely important. The best people know they should join a rocket ship. The best people will wait for a breakout trajectory until they join. Either spend 0% of time or 25% of time hiring.</p>

<p>Mediocre people do not build great companies. A single mediocre hire in the first 5 will kill the startup. Will I bet the future of the company on this single person?</p>

<p>Where do you find people to hire? Early hires &ndash; people you know. Personal referrals are the trick to hiring, even if it’s uncomfortable. Also look outside Silicon Valley &ndash; it’s way too competitive.</p>

<p>Experience matters for some roles and not others. Doesn’t matter too much for early hires.</p>

<p>3 things to look for:
* Are they smart
* Do they get things done
* Do I want to spend a lot of time around them?</p>

<p>If you haven’t worked with this person before, then you should work with them on a small project for a few days. Most first time founders are horrible interviewers. If you do interview, ask about previous projects. Also make sure you call references. Really dig in on what they did, etc with their references.</p>

<p>They also need:</p>

<ul>
<li>Good communication skills

<ul>
<li> If someone can’t communicate clearly, it’s a real problem</li>
</ul>
</li>
<li>Risk taker. Find people that like risk.</li>
<li>Manically determined</li>
<li>Describe every employee as an animal &ndash; you need unstoppable people, people that are just going to get things done.</li>
<li>Find people that you would feel comfortable reporting to</li>
</ul>


<p>Employee Equity:
* ~10% of the company to the first 10 employees.
* Either way it vests, and if they’re good, then they’re going to add way more value.
* For some reason founders give more equity to investors and less to employees</p>

<p>After you hire employees, you have to retain them. Founders get this wrong very often. Make sure your employees are happy and feel valued. This is a big reason why big equity grants are important. Don’t tell your employees they’re fucking up every day unless you want them to leave. As a founder, this is your natural instinct. You have to let your team have all the credit for all the good stuff, and you take the fall for the bad stuff. Don’t micromanage. As a first time founder, you are likely to be a very bad manager.</p>

<p>Fire fast. Firing people is one of the worst parts of running a company. Every first time founder waits too long and hopes an employee will turn around. It’s so painful and so awful that everyone gets it wrong. Also fire people that create office politics and is consistently negative. Both are very toxic to the company.</p>

<p>How do you balance firing fast and making them feel secure. Everyone screws up once or twice, but if they get every decision wrong, that’s when you need to act. At that point, it’ll be painfully aware to everyone. In practice, there is never any doubt.</p>

<p>When should cofounders decide on the equity split?
Many cofounders like to leave this off for a very long time. This doesn’t get easier with time. You want to set this very soon after you start working together. Should be near equal. If you aren’t willing to give the cofounder an equal share of equity, then you should think about whether you want to actually work with this person.</p>

<p>What happens when you’re relationship with your cofounder falls apart?
Every cofounder has to have vesting. This pre-negotiates what happens if one of you leaves. Typically 4 year vesting cycle with a 1 year click. If you don’t, you have a dead weight in the equity table, and it will fuck up everything &ndash; especially investment. YC won’t fund a company that doesn’t have vested equity.</p>

<h2>Execution</h2>

<p>Being a founder means signing up for years of grinding. You can’t outsource this. Everything in a startup gets modeled after the founders &ndash; culture is what the founders do.</p>

<p>A big part of execution is just putting in the effort.</p>

<p>CEO has five jobs:</p>

<ul>
<li>Set the vision</li>
<li>Raise money</li>
<li>Evangalize</li>
<li>Hire and manage</li>
<li>Make sure the entire company executes</li>
</ul>


<p>Two parts of getting things done: Focus &amp; Intensity</p>

<h3>Focus</h3>

<p>Focus is critical. 100 important things competing for your attention every day. A lot of things that founders think are important actually aren’t. Figure out what the 3 most important things are, and only do those.</p>

<p>Founders are people that are excited about starting new things which is why focus is so difficult.</p>

<ul>
<li>Say no a lot</li>
<li>Set overarching goals. Repeat them.</li>
<li>Communicate &ndash; can’t be focused without great communication</li>
<li>Maintain growth and momentum</li>
<li>Work together in person</li>
</ul>


<p>Often companies get distracted by their own PR. Articles are good for growth.</p>

<h3>Intensity</h3>

<p>You need extreme focus and extreme dedication. You can have a startup and one other thing, but usually not one. You need to be willing to outwork your competitors.</p>

<p>A small amount of extra work on the right thing makes a huge difference. Working at 1.01 ^ 365 vs 0.99 ^ 365 is 37.78 vs 0.02.</p>

<p>Intensity is:</p>

<ul>
<li>Relentless operating rhythm</li>
<li>Obsession with Execution Quality</li>
<li>Bias towards action</li>
</ul>


<p>“Move fast and break things” BUT make sure you know where to keep quality high.</p>

<p>Indecisiveness is a startup killer. You need a bias towards action. Every time you talk to good founders, they’ve gotten new things done.</p>

<p>You can do huge things in incremental pieces. If you keep knocking down little pieces, eventually it’s a huge thing.</p>

<p>Always keep momentum. Momentum and growth are the life blood of startups. If you ever take your foot off the gas pedal, things will spiral out of control. For most software startups &ndash; always keep growing.</p>

<p>Sales fix everything in a startup. If you have momentum sag, you’ll notice that the company starts internally fighting. When there’s disagreement in the team, you ask your users.</p>

<p>Keep momentum by setting an operating rhythm</p>

<ul>
<li>Ship product</li>
<li>Launch new features</li>
<li>Review/report metrics and milestones.</li>
</ul>


<p>Use your board to get your company to care about metrics and milestones.</p>

<p>Often competitors disrupt momentum &ndash; especially when they get PR. Don’t worry about competitors at all until their product is beating yours.</p>

<p>“The competitor to be feared is one who never bothers about you at all, but goes on making his own business better all the time” &ndash; Henry Ford.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On finding a technical co-founder]]></title>
    <link href="http://chintanparikh.github.io/blog/2014/01/04/on-finding-a-technical-co-founder/"/>
    <updated>2014-01-04T03:14:00-05:00</updated>
    <id>http://chintanparikh.github.io/blog/2014/01/04/on-finding-a-technical-co-founder</id>
    <content type="html"><![CDATA[<p>Every few days, I get an email or a Facebook message asking me if I know anyone who&rsquo;s looking to be their technical co-founder. This post is an aggregation of responses and tips I give to college startups looking for a technical co-founder.</p>

<p><strong>Meet Hackers</strong></p>

<p>The most important thing you can do is to have many hacker friends.</p>

<p>Every hacker I know would never consider being a technical co-founder of someone they didn&rsquo;t know. The &ldquo;exception&rdquo; is if you&rsquo;ve already got a funded, successful startup, but those founders will never be looking for a technical co-founder, so it&rsquo;s hardly an exception.</p>

<p>The logical conclusion is that you need to meet a lot of technical people. But there&rsquo;s a clear difference between meeting someone and befriending someone. In college, meeting hackers isn&rsquo;t hard &ndash; go to your college web development/mobile development club. The thing is, humans aren&rsquo;t stupid &ndash; developers will know if you&rsquo;re just there to shake hands and &ldquo;network&rdquo;, and it means you&rsquo;re not going to fit in with the community.</p>

<p>Instead, I recommend you learn to code. Go to the web development club not with the intention of finding a technical co-founder, but rather with the intention of becoming a technical co-founder. You&rsquo;ll find one of two things will happen: either you&rsquo;ll get friendly enough with someone who likes your idea that they&rsquo;ll want to work with you, or you&rsquo;ll end up figuring out how to build your MVP yourself (and finding a co-founder after you have an MVP with traction is far easier, especially if you&rsquo;re now technical).</p>

<p><strong>College</strong></p>

<p>I think college is both a blessing and a curse to aspiring startup founders. On the one hand, you have an extremely concentrated mass of co-founders all around you.However, college creates an incredible safety net. In the &ldquo;real world&rdquo; if you fail, it&rsquo;s far more difficult to pick yourself and restart than it is in college.</p>

<p>I think Paul Graham said it best &ndash; &ldquo;If you start a startup in the summer between your junior and senior year, it reads to everyone as a summer job. So if it goes nowhere, big deal; you return to school in the fall with all the other seniors; no one regards you as a failure, because your occupation is student, and you didn&rsquo;t fail at that. Whereas if you start a startup just one year later, after you graduate, as long as you&rsquo;re not accepted to grad school in the fall the startup reads to everyone as your occupation. You&rsquo;re now a startup founder, so you have to do well at that.&rdquo;[1]</p>

<p>When looking for a technical co-founder, the strength of your network will matter far more than the size of your network. What I mean by that is you&rsquo;re in a much better position if you&rsquo;re good friends with 5 hackers than if you know 20 on a superficial, surface level basis. Thirty years ago, networking events were huge. Why? The internet wasn&rsquo;t anywhere nearly as widely used as it is today. Now we have Facebook groups and mailing lists, and personal connections are all the rarer. Anyone can claim to be anything, and unlike before, credibility doesn&rsquo;t come from business cards and hasty handshakes. Even if I introduce you to a technical friend, you&rsquo;ll need something far deeper and more engaging than a superficial email introduction.</p>

<p><strong>Selling</strong></p>

<p>Startups are about sales. You&rsquo;re selling your product to users. You&rsquo;re selling your startup (and yourself) to venture capitalists. You&rsquo;re selling your idea to your potential technical co-founder.</p>

<p>The alternative to involving yourself in the hacker community is to be an excellent salesman [2]. Early stage startups should be doing two things: building product and finding users. If you aren&rsquo;t the technical co-founder, then your usefulness lies in your ability to find users. Finding users is really just another way of saying convincing users to sign up for your product, which boils down to selling your product to users.</p>

<p>I&rsquo;m not sure how easy this skill is to develop, and I&rsquo;d argue it&rsquo;s almost certainly harder to develop than technical ability. The key qualities of top salesman are the ability to empathize, and an ego drive [3]. Empathy seems to be developed around the ages of 2-4, and although it&rsquo;s almost certainly possible to develop empathy in your college years, there are many more resources on learning to program than on learning to develop empathy.</p>

<p>Interestingly, all the hackers I know build for the sense of accomplishment of building something. As a developer, it&rsquo;s largely about yourself &ndash; you create to satisfy yourself. This is very different from the empathetic and ego driven salesmen, and I wonder if your early development decides which category you fit into.</p>

<p>I think the best solution to finding a technical co-founder is almost always to learn to code. The exception is if you&rsquo;re an exceptional salesman &ndash; in which case it&rsquo;s a better investment of your time to keep selling.</p>

<p><strong>Notes</strong></p>

<p>[1] <a href="http://paulgraham.com/mit.html">http://paulgraham.com/mit.html</a></p>

<p>[2] If you fall into this category, then make sure you find a technical friend to look over your potential co-founder. If they can&rsquo;t write good code, hiring new developers is going to be a pain in the ass &ndash; no-one likes dealing with crappy code.</p>

<p>[3] More at <a href="http://hbr.org/2006/07/what-makes-a-good-salesman/ar/1">http://hbr.org/2006/07/what-makes-a-good-salesman/ar/1</a></p>

<p>Comment on HN <a href="https://news.ycombinator.com/item?id=7023253">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How we're going to change Georgia Tech, forever.]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/07/27/how-were-going-to-change-georgia-tech/"/>
    <updated>2013-07-27T02:06:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/07/27/how-were-going-to-change-georgia-tech</id>
    <content type="html"><![CDATA[<p>A year ago, I&rsquo;d hardly heard of startups. Neither had just about anyone at Georgia Tech. This year, we&rsquo;re taking the country by storm.</p>

<p>I had just started the second semester of my freshman year when I met <a href="https://twitter.com/heyaswin">Aswin</a> through a mutual friend. I was sitting at Starbucks, nervous and not too sure what to expect &ndash; who was this guy? A quick google search revealed that he had been <a href="http://thepioneer.gatech.edu/2012/04/02/student-spotlight-aswin-natarajan-a-path-to-self-discovery/">featured on the Pioneer</a>, so clearly he was doing something right.</p>

<p>Honestly, if I had known how much this meeting was going to change my life, I probably would have been paralyzed with apprehension.</p>

<p>We sat down and started talking about <a href="http://startupexchange.gatech.edu/#startupSemester">Startup Semester</a> &ndash; he and a friend, <a href="https://twitter.com/jdchizzle">Jerome Choo</a> had started an experimental, student run &ldquo;pre-incubator&rdquo; program in an attempt to push the entrepreneurial community at Georgia Tech forward. It had been a huge success, quickly rising to the top of <a href="https://news.ycombinator.com/item?id=4471133">Hacker News</a> and garnering national recognition.</p>

<p>Aswin took me to a room that had been given to him by the Georgia Tech library and told me it was going to change Georgia Tech. He envisioned a co-working space where any Georgia Tech student interested in startups could come to learn, hack and hang out. The passion in his eyes was riveting, and this was the moment that sold me &ndash; I knew I had to be a part of this.</p>

<p>We spent the next semester working out how to best solve this problem &ndash; we threw some amazing events, and had some great speakers come in. Slowly, we saw this culture start to evolve, and out of it came the <a href="http://startupexchange.gatech.edu">Startup Exchange</a>. Looking back, I think our biggest tipping point was <a href="http://startupexchange.gatech.edu/#threeDayStartup">3 Day Startup</a>. We had students from 8 different colleges there and it absolutely exploded sX&rsquo;s growth. Heck, we&rsquo;ve even spread into Georgia State with the help of the insanely talented <a href="http://www.linkedin.com/pub/ricky-hunter/15/b75/454">Ricky Hunter</a> (we met at 3DS). If you&rsquo;re  reading this, and you go to another school in the ATL area, I want to hear from you. Let&rsquo;s get this happening at <em>every</em> school in ATL. Georgia Tech, Emory, GSU, UGA, Morehouse, Spelman.</p>

<p>It was clear that something had to be done at Tech. The administration had been fairly stagnant when it came to encouraging undergrads to pursue startups, and we desperately wanted to change that. When we started, students at Georgia Tech really had two major options presented to them &ndash; work hard and get a high paying job at a Fortune 500 or a similar big company, or work hard and get into research. We wanted to add a third option &ndash; work your ass off, start a startup, and innovate.</p>

<p>Now, along with a rockstar team (meet <a href="https://twitter.com/iamwillking">Will</a>, <a href="https://twitter.com/samurai__san">Sameera</a>, and <a href="https://www.facebook.com/deepan.mehta">Deepan</a>), I run Startup Exchange, and this is the year it&rsquo;s going to take over Georgia Tech.</p>

<p>The first thing that needs to be developed is a hacker culture in <em>every</em> discipline at Georgia Tech. People need to be building shit. I think this is, by far, the biggest challenge we&rsquo;re going to face at Tech because it requires the support of upper level administration, and eventually, changes to the curriculum. The intro CS, engineering classes should be about building something (look at <a href="https://www.cs50.net/">Harvard&rsquo;s CS50 class</a>). That&rsquo;s what got me so hooked on the startup lifestyle, and it&rsquo;s the reason I&rsquo;m so passionate about it. I don&rsquo;t want to be stuck behind a desk, debugging someone else&rsquo;s code. I want to be building amazing products that reach millions of people. This semester, we&rsquo;ll be busing people around the country for <a href="http://www.mhacks.org/">MHacks</a>, <a href="http://2013f.pennapps.com">PennApps</a>, and <a href="http://hacknashville.com/">HackNashville</a>. After reading <a href="https://medium.com/hackathons-anonymous/7ebcd6bfda26">these</a> <a href="https://medium.com/hackers-and-hacking/e6439754078">two</a> posts by <a href="https://twitter.com/davefontenot">Dave Fontenot</a>, and hanging with him here in NY, I&rsquo;m convinced this is how to begin developing Georgia Tech&rsquo;s hacker culture.</p>

<p>After that, we need some way to organically create relationships between students. That&rsquo;s what the Exchange solves. It aims to be a space that exists to facilitate inter-disciplinary collaboration. I want a 3D printer in the same room as arduinos, rPis, 27&#8221; iMacs and some kickass Linux machines, as well as supplies for the design students. Once we have a hacker culture in all these disciplines, the Exchange will naturally create relationships between students in different majors, just because they&rsquo;re in the same space. Relationships lead to startups being formed once they hit a good idea. Right now, we&rsquo;re on the right track, but we&rsquo;re fast going to outgrow the tiny room we have now. We&rsquo;ve got our eyes set on the <a href="http://www.communicationcenter.gatech.edu/">CommLab</a> &ndash; that would give us enough space to set up an amazing environment. Eventually, I want it to be the coolest place on campus to get work done. Defining a good culture here is key.</p>

<p>Next, we need solid incubators to turn the ideas formed by students into startups. <a href="http://startupexchange.gatech.edu/#startupSemester">Startup Semester</a>, <a href="http://flashpoint.gatech.edu/">Flashpoint</a> and <a href="http://venturelab.gatech.edu/">VentureLab</a> have got that covered fairly well, but it&rsquo;ll require some intense work. Startup Semester takes in students that have an idea and team, but don&rsquo;t know how to go from there. After that, we send them to Flashpoint, YC, Techstars and they tear up the competition.</p>

<p>Lastly, we&rsquo;re eventually going to need a student VC firm. Once we have enough startups coming out of Georgia Tech, I either want to bring <a href="http://dormroomfund.com/">Dorm Room Fund</a> to Georgia Tech, or work with a local VC to create a student VC firm at Georgia Tech. After speaking to Peter Boyce, who founded <a href="http://roughdraft.vc">RoughDraft VC</a> at Harvard, I&rsquo;ve got a fair few ideas on how to do this well. Hopefully, I&rsquo;ll be posting more on that in about a years time. On that note, if you&rsquo;re at ATL VC firm who wants to get involved in this, shoot me an <a href="mailto:%20chintanparikh@gatech.edu">email</a>. Ideally, it&rsquo;ll be something like <a href="http://atlantaventures.com/">Atlanta Ventures</a>, but without a requirement to drop out &ndash; I don&rsquo;t think Georgia Tech&rsquo;s administration would like us too much if we spiked the dropout rate.</p>

<p>If you&rsquo;ve read up to here, you now know what the next few years of my life are going to look like. If you&rsquo;re interested in getting involved in any way, shoot me an <a href="mailto:%20chintanparikh@gatech.edu">email</a>. I promise I won&rsquo;t bite.</p>

<p>Comment on HN <a href="https://news.ycombinator.com/item?id=6120338">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thank you, swipe again]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/07/23/thank-you-swipe-again/"/>
    <updated>2013-07-23T17:25:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/07/23/thank-you-swipe-again</id>
    <content type="html"><![CDATA[<p>So I&rsquo;m writing this because the media seems to be making a huge deal out of Tinder&rsquo;s privacy issues. (read <a href="http://qz.com/106731/tinder-exposed-users-locations/">this</a> and <a href="http://valleywag.gawker.com/your-tinder-account-was-vulnerable-and-they-never-told-885675272?rev=1374611580&amp;utm_campaign=socialflow_gawker_twitter&amp;utm_source=gawker_twitter&amp;utm_medium=socialflow">this</a>).</p>

<p>I discovered the issues at the Branch hackathon last weekend (props to <a href="http://twitter.com/hursh">@hursh</a> and the rest of the kickass team at <a href="http://twitter.com/branch">@branch</a> for throwing an amazing hackathon).</p>

<p>Here are the facts:</p>

<ul>
<li>Yes, Tinder was releasing geolocation and Facebook data through their private API</li>
<li>Yes, it let you do some remarkably creepy things (like <a href="https://www.dropbox.com/s/1seoi7i2g9mj8qg/Tinder%20-%20Broadband.m4v">this</a>)</li>
</ul>


<p>However, unless you know how to set up a <a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack">mitm</a> proxy, it&rsquo;s simply not possible to grab that data. I&rsquo;m going to assume that doesn&rsquo;t qualify as a &ldquo;simple hack&rdquo; as the majority of the media put it.</p>

<p>There&rsquo;s a little in Sean Rad&rsquo;s response that I don&rsquo;t agree with. However, his reasoning for not bringing it to the user&rsquo;s attention is valid &ndash; “It was a minor flaw that didn’t impact any of our users, so we decided it wasn’t worth bringing to their attention.”</p>

<p>Not only was the API private, but I&rsquo;ve never seen a company fix an issue that fast. I think I emailed them at 4am. When I woke up, it was fixed, and for that, they seriously deserve to be commended. They say they take their users&#8217; privacy seriously, and it looks like they mean it.</p>

<p>As to why that data was in the response in the first place, I&rsquo;m hesitant to believe that it happened during the Android rollout. I&rsquo;d say it&rsquo;s more likely that they calculated shared friends, likes, and distance client side instead of server side for the early versions of the app. When they switched to server side, they never removed the raw data.</p>

<p><strong>Updated:</strong> They called me last night to say thank you. They wanted me to speak with the CTO, but he was busy working all night to look for and fix any further privacy issues. Yes, Tinder messed up, but their response has been phenomenal and I&rsquo;m thoroughly impressed.</p>

<p>Comment on HN <a href="https://news.ycombinator.com/item?id=6102624">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is this how Tinder is going to monetize?]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/07/20/is-this-how-tinder-is-going-to-monetize/"/>
    <updated>2013-07-20T00:28:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/07/20/is-this-how-tinder-is-going-to-monetize</id>
    <content type="html"><![CDATA[<p>So I&rsquo;m at a Branch hackathon right now, and we&rsquo;re all just chilling. I decided to poke around Tinder and try to peek at their API.</p>

<p>Every second or so, there&rsquo;s a POST request to api.tinder.com/updates which passes in</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;last_activity_date&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-07-20T02:57:36.127Z&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The response however, is a little more interesting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;matches&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>    <span class="nt">&quot;blocks&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>    <span class="nt">&quot;matchmaker&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>    <span class="nt">&quot;last_activity_date&quot;</span><span class="p">:</span> <span class="s2">&quot;Sat, 20 Jul 2013 02:57:36 GMT&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;trending&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Matches and blocks are fairly obvious &ndash; new people you&rsquo;re matched with, and new people who have blocked you. However, it&rsquo;s the <code>trending</code> field that&rsquo;s a little more interesting. I&rsquo;m completely spitballing here, but it&rsquo;s definitely possible that Tinder will charge users to &ldquo;trend&rdquo; to other users on tinder. Maybe this means that more people see them? I also have no idea what the <code>matchmaker</code> field is.</p>

<p>Any thoughts?</p>

<p>EDIT: I was using the Android version, so it didn&rsquo;t have the &ldquo;matchmaker&rdquo; feature. I just played with a friend&rsquo;s iOS phone, and it&rsquo;s pretty clear what the matchmaker attribute is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Can't install gems with native extensions? Try this]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/06/28/cant-install-gems-with-native-extensions-try-this/"/>
    <updated>2013-06-28T15:10:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/06/28/cant-install-gems-with-native-extensions-try-this</id>
    <content type="html"><![CDATA[<p>Yesterday, I re-installed my homebrew install because it was corrupted. That led to a huge headache where I couldn&rsquo;t install any gems with native extensions. It took forever for me to find the issue, so I thought I&rsquo;d write this in the hopes it helps anyone googling around.</p>

<p>My issue was that I&rsquo;d installed gcc-4.2 using homebrew. Re-installing homebrew broke that install.</p>

<h2>Solution:</h2>

<p>First, try <code>brew install apple-gcc42</code>. If you&rsquo;re lucky, it&rsquo;ll work, and you&rsquo;re set.</p>

<p>If not, you need to tap <code>homebrew/dupes</code>. A tap is just homebrew speak for another git repository with extra formulae. Try</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew tap homebrew/dupes
</span><span class='line'>brew update
</span><span class='line'>brew install apple-gcc42
</span></code></pre></td></tr></table></div></figure>


<p>It might fail on the <code>brew update</code> step. This is a super old bug that&rsquo;s been fixed, but you need to do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> <span class="k">$(</span>brew --repository<span class="k">)</span>
</span><span class='line'>git reset --hard FETCH_HEAD
</span></code></pre></td></tr></table></div></figure>


<p>If that doesn&rsquo;t work:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> <span class="k">$(</span>brew --repository<span class="k">)</span>/Library
</span><span class='line'>git clean -fd
</span></code></pre></td></tr></table></div></figure>


<p>Now that almost fixed it for me, but when I ran brew update it was complaining about overwritten files in <code>homebrew/dupes</code>. I couldn&rsquo;t find the solution for this anywhere, so I kept poking around and trying different things. Here&rsquo;s what worked:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> <span class="k">$(</span>brew --repository<span class="k">)</span>/Library/Taps/homebrew-dupes
</span><span class='line'>git reset --hard FETCH_HEAD
</span><span class='line'>brew update
</span><span class='line'>brew tap --repair homebrew/dupes
</span></code></pre></td></tr></table></div></figure>


<p>And now, you should be able to <code>brew install apple-gcc42</code> and your native extensions should install. It&rsquo;s worth noting that you <em>need</em> gcc-4.2 for the native extensions. Using another version of gcc (4.3 &ndash; 4.8) won&rsquo;t work.</p>

<p>Happy hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Traits + Ignored Attributes = ♥]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/06/05/factorygirl-plus-hidden-attributes-equals/"/>
    <updated>2013-06-05T21:22:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/06/05/factorygirl-plus-hidden-attributes-equals</id>
    <content type="html"><![CDATA[<p>If you don&rsquo;t know about FactoryGirl&rsquo;s traits, here&rsquo;s a quick primer:</p>

<p>They allow you to specify groups of attributes and callbacks that can be applied when you create the Factory in your tests. For example:</p>

<figure class='code'><figcaption><span>A regular factory with a sub_referral</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:referral</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="s1">&#39;A referral&#39;</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">trait</span> <span class="ss">:with_sub_referrals</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">referral</span><span class="o">|</span>
</span><span class='line'>        <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:sub_referral</span><span class="p">,</span> <span class="ss">referral</span><span class="p">:</span> <span class="n">ref</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This lets you do something like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:referral</span><span class="p">,</span> <span class="ss">:with_sub_referrals</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>But wait, I hear you say &ndash; why not just define a new factory, like so:</p>

<figure class='code'><figcaption><span>A regular factory with a sub factory</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:referral</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="s1">&#39;A referral&#39;</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">factory</span> <span class="ss">:referral_with_sub_referrals</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">referral</span><span class="o">|</span>
</span><span class='line'>          <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:sub_referral</span><span class="p">,</span> <span class="ss">referral</span><span class="p">:</span> <span class="n">ref</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Sure, this works, but what if I have two traits?</p>

<figure class='code'><figcaption><span>A regular factory with a sub_referral</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:referral</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="s1">&#39;A referral&#39;</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">trait</span> <span class="ss">:with_sub_referrals</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">referral</span><span class="o">|</span>
</span><span class='line'>          <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:sub_referral</span><span class="p">,</span> <span class="ss">referral</span><span class="p">:</span> <span class="n">ref</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">trait</span> <span class="ss">:with_rating</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">rating</span> <span class="mi">5</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, this lets you do</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:referral</span><span class="p">,</span> <span class="ss">:with_sub_referrals</span><span class="p">,</span> <span class="ss">:with_rating</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you <em>could</em> do this by creating multiple factories, but it ends up remarkably ugly, and there&rsquo;s a tonne of code repetition (ew).</p>

<p>However, what if I want to specify how many sent_referrals I have in the above example. Unfortunately, you can&rsquo;t pass arguments into traits. Enter ignored attributes:</p>

<p>An ignored attribute is exactly what it sounds like &ndash; an attribute that&rsquo;s ignored when the object is created.</p>

<figure class='code'><figcaption><span>A trait using ignored attributes</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:referral</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="s1">&#39;A referral&#39;</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">trait</span> <span class="ss">:with_sub_referrals</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">ignore</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">sent_referrals_count</span> <span class="mi">5</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      
</span><span class='line'>        <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">referral</span><span class="p">,</span> <span class="nb">eval</span><span class="o">|</span>
</span><span class='line'>          <span class="nb">eval</span><span class="o">.</span><span class="n">sent_referral_count</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">create</span><span class="p">(</span><span class="ss">:sub_referral</span><span class="p">,</span> <span class="ss">referral</span><span class="p">:</span> <span class="n">ref</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>      
</span><span class='line'>    <span class="n">trait</span> <span class="ss">:with_rating</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">rating</span> <span class="mi">5</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So now, to set the number of sent_referrals that are created, I can do this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:referral</span><span class="p">,</span> <span class="ss">:with_sent_referrals</span><span class="p">,</span> <span class="n">sent_referral_count</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Beautiful, isn&rsquo;t it?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting that startup internship]]></title>
    <link href="http://chintanparikh.github.io/blog/2013/06/05/getting-that-startup-internship/"/>
    <updated>2013-06-05T18:25:00-04:00</updated>
    <id>http://chintanparikh.github.io/blog/2013/06/05/getting-that-startup-internship</id>
    <content type="html"><![CDATA[<p><strong>tl;dr &ndash; Code, a lot. Send cold emails to founders. Do your research on companies. Network. Practice interviews. Don&rsquo;t give up</strong></p>

<p>So I&rsquo;ve officially started my summer internship at <a href="http://www.myaidin.com/">Aidin</a> (they kick ass), and a bunch of people have been asking me for tips on getting an internship at a startup as a freshman.</p>

<p><strong>One year before your summer internship</strong></p>

<p>You&rsquo;re still living at home, and you&rsquo;ve got a lot of free time on your hands. You need to make sure this time is spent productively. Don&rsquo;t get me wrong &ndash; make sure to have an absolute blast before starting college, but when you&rsquo;re not out with friends, code.</p>

<p>There&rsquo;s no easy way to go from being a mediocre developer to a good developer. You&rsquo;ve really got to code as much as you can. This period of time is great because you&rsquo;ve got a lot of time for unstructured learning. Find a problem you have, and codea solution. Web development is really hot right now, as it big data &ndash; if you get decent in either of these fields, you&rsquo;ll land yourself a great internship. Learning Rails is also a great idea, as it&rsquo;s used by a tonne of startups. Try to build up your <a href="http://github.com/chintanparikh">github</a> with some cool side projects.</p>

<p>My situation was slightly unique. I&rsquo;d gone to an international school back in Perth, Australia and we didn&rsquo;t follow the same timetable as every other school in the country. As a result, everyone was still in school after I graduated, so I went out and approached a bunch of web development firms to see if I could get an internship. I got lucky, and got hired by <a href="http://www.thefrontiergroup.com.au/">The Frontier Group</a> where they taught me Rails, Agile development, and how to make <em>amazing</em> coffee.</p>

<p><strong>First Semester</strong></p>

<p>I ignored looking for internships during my first semester, but I did go to the career fair. The one callback I got from the career fair was from <a href="http://a16z.com/">Andreessen Horowitz</a>, who wanted to add me to their talent pool. The technical interview was remarkably easy, and I can&rsquo;t stress how much they&rsquo;ve helped me out during this entire process. They introduce me to any startup in their <a href="http://a16z.com/portfolio/">portfolio</a> that I&rsquo;m interested in (and they invest in some amazing startups). They also really helped me out when I was having issues getting work authorization (oh the woes of an international student). If you see a16z at your career fair, be sure to speak to them &ndash; as long as you know your basics, you&rsquo;ll be fine.</p>

<p>If you&rsquo;re an international student, you <strong>need</strong> to go to your Office of International Education and ask about either a OPT or a CPT work authorization permit. It&rsquo;s vital that you don&rsquo;t put this off &ndash; I did and almost couldn&rsquo;t work over the summer, even after I&rsquo;d signed paperwork with Aidin.</p>

<p>During my winter break, I worked out exactly what I wanted from my internship. I knew I wanted to be interning at a startup, as that scene really interested me. I also bought <a href="http://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X">Cracking the Coding Interview</a>, which was a great read, even if I didn&rsquo;t understand much of it (I hadn&rsquo;t taken my data structures and algorithms class at that point). I also really wanted to be in NY or SF.</p>

<p><strong>Second Semester</strong></p>

<p>Second semester rolled around, and I got to work. I found startups that I thought were neat, or where I thought I&rsquo;d learn a lot. <a href="https://angel.co/">AngelList</a> is amazing for this, and you can filter by location. Once I found a startup I thought was neat, I used <a href="http://www.crunchbase.com/">Crunchbase</a> and the startup&rsquo;s website to find more information about them. Be sure to take a look at the startup&rsquo;s jobs page. Even if they don&rsquo;t have any intern positions explicitly listed, take a look at the software engineer roles to see what kind of skill set you&rsquo;ll want to emphasize on your resume. The <a href="https://news.ycombinator.com/">Hacker News</a> Who&rsquo;s Hiring threads (<a href="https://news.ycombinator.com/item?id=5472746">example</a>) were also great.</p>

<p>Next, I found a co-founder&rsquo;s email. 9 times out of 10 it was <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#x3a;&#x66;&#x69;&#x72;&#115;&#116;&#110;&#97;&#109;&#x65;&#64;&#x73;&#116;&#97;&#x72;&#116;&#117;&#112;&#x2e;&#99;&#x6f;&#109;&#46;">&#x66;&#105;&#x72;&#115;&#x74;&#110;&#x61;&#x6d;&#101;&#64;&#115;&#x74;&#97;&#114;&#116;&#117;&#x70;&#x2e;&#99;&#111;&#x6d;&#x2e;</a> <a href="http://rapportive.com/">Rapportive</a> was super useful in checking if I had the right email. If I couldn&rsquo;t find the email, I tried a bunch of different combinations in a Google Search and eventually something matched. If I couldn&rsquo;t find the co-founder&rsquo;s email, I looked for a jobs@startup email, which was usually easier to find.</p>

<p>Now the first email you send is pretty important. Make sure it reflects your personality, and that&rsquo;s it not too formal (it is a startup after all). Be sure to tell the founder what you like about their startup and what attracted you to them in the first place. Make sure you highlight your strengths, and don&rsquo;t forget to include your github link and your resume. Once you&rsquo;ve got one of these emails perfected, you can pretty much copy and paste it for other emails, and change a few of the details.</p>

<p>Here was my basic template:</p>

<blockquote><p>Hi <strong>Founder</strong>,</p>

<p>I&rsquo;m Chintan, a freshman at Georgia Institute of Technology, and I&rsquo;m looking to be <strong>company</strong>&rsquo;s next kick ass engineering intern.</p>

<p>I love that you guys are <strong>something you like about the company</strong></p>

<p>I have a fair bit of experience in web development (I interned at a RoR firm back in Australia and I&rsquo;ve been working in PHP for a few years), but I&rsquo;d really love to expand my experiences and learn more about data mining and distributed data systems. I&rsquo;ve got a fair bit of experience in Agile environments and with using Git in a large team (git-flow anyone?).</p>

<p>I&rsquo;m currently in the process of founding a startup which is based on an app to predict outfits, and I&rsquo;d love experience in a startup environment. My previous internship was in a small (but awesome) RoR shop, and it was nothing short of amazing. It was very startup-esque and everyone was extremely down to earth and willing to teach.</p>

<p>I&rsquo;m currently taking my college&rsquo;s course on data structures and algorithms (which I&rsquo;m having to teach myself &ndash; terrible professor), and it&rsquo;s extremely engaging. Even though I&rsquo;m a freshman, I have no doubt that I can teach myself the necessary skills required to hustle with the juniors and seniors.</p>

<p>I&rsquo;m attaching my resume to this email, and you can find me on github at <a href="github.com/chintanparikh">github.com/chintanparikh</a>. If you&rsquo;re interested in having me, shoot me an email at <a href="mailto:chintanparikh@gatech.edu">chintanparikh@gatech.edu</a></p>

<p>Cheers,
Chintan</p></blockquote>

<p>This intro email is basically your &ldquo;cover letter&rdquo;, so give the startup a reason to want you.</p>

<p>After this, you wait. Some startups will reject you right off, saying they don&rsquo;t hire freshman. Other&rsquo;s simply won&rsquo;t respond. However, if you&rsquo;ve got a decent github, you should get some phone screens. There was a period where I&rsquo;d wake up in the morning, go to class, and shoot off emails to ~50 different startups that I thought were cool. Do this for a week, and you&rsquo;ll have plenty of phone interviews.</p>

<p><strong>Networking</strong></p>

<p>As cliché as this sounds, networking is important. It&rsquo;s a remarkably fast way to meet important startup founders, and get introductions to great places to intern. Get involved in the startup community at your school. Early on in my second semester, I met <a href="https://twitter.com/heyaswin">Aswin</a>. He was awesome, and was seriously involved in the startup community at Georgia Tech. He was in the process of founding an organization which would try and bring the startup community to Georgia Tech, and I got involved. I met a tonne of amazing people, got to go to some amazing <a href="http://www.founderfables.com/">startup</a> <a href="http://startupriot.com/">conferences</a>, and I met a bunch of amazing founders of successful startups. A personal connection or an introduction by someone the founder knows personally is definitely better than a cold email.</p>

<p>I also learnt a lot about how startups operate, co-organized a hackathon and helped a bunch of fellow students launch their startups.</p>

<p>Oh, and I&rsquo;m now co-running the place (Startup Exchange), so if you&rsquo;re at Georgia Tech, we&rsquo;d love for you to get involved. I&rsquo;d suggest applying to <a href="http://www.startupsemester.gatech.edu/">Startup Semester</a>. It&rsquo;s our free &ldquo;incubator&rdquo;, where we&rsquo;ll turn you into a lean, mean startup machine.</p>

<p><strong>Phone Screens</strong></p>

<p>My first phone screen was terrifying. I had no idea what to expect, no idea what kind of questions I&rsquo;d be asked. One of the first emails I&rsquo;d sent was to a pretty big YC company, and they wanted to interview me. I got excited, and set up the phone screen for the next week. <strong> Do not do this</strong>. I absolutely bombed my first phone screen. I was nervous, and even when I knew the answers, I couldn&rsquo;t communicate them effectively.</p>

<p>I&rsquo;d recommend scheduling the first 5 or so phone screens with startups that you don&rsquo;t particularly care about. This will get you into the habit of interviewing over the phone and build up the confidence you need to think on the spot.</p>

<p>If you&rsquo;ve done things right, you&rsquo;re going to need a good calendar to keep track of phone screens. There was a period of about three weeks where I was interviewing every single day for a different startups. Use Google calendar, it&rsquo;s a life saver.</p>

<p>What you&rsquo;re actually asks varies wildly. I had some deeply technical questions &ndash; <em>&ldquo;Explain the difference between Symbols and Strings in Ruby&rdquo;</em>, and <em>&ldquo;Why aren&rsquo;t symbols garbage collected?&rdquo;</em>, some of the usual questions <em>&ldquo;Describe a time when you and a teammate disagreed. How did you get over it?&rdquo;</em>, and even questions like <em>&ldquo;We have a Where&rsquo;s Waldo page in front of us, and I know where Waldo is, but you don&rsquo;t. How do I convince you that I know where Waldo is without revealing his location&rdquo;</em>, and <em>&ldquo;Explain something to me&rdquo;</em>.</p>

<p>Also, if you haven&rsquo;t taken a Data Structures and Algorithm&rsquo;s class, make sure you let your interviewer know that ahead of time. Data Structure questions come up a lot in interviews, but employers know they&rsquo;re interviewing freshman, so they&rsquo;ll tailor the questions to you (or might just reject you).</p>

<p>Be sure to brush up on the company&rsquo;s tech stack, and everything you have in your resume. If you&rsquo;ve got Rails in your resume, and the startup uses Rails, you can be damn sure they&rsquo;ll ask you a question on Rails.</p>

<p>Lastly, be sure to do some research on the company &ndash; if they&rsquo;re a bigger startup, you might be able to find interview questions on <a href="http://www.glassdoor.com/index.htm">Glassdoor</a> and the like (props to <a href="https://twitter.com/SirDragonai">Shehmeer</a> for the tip)</p>

<p>Once they&rsquo;re done, make sure you have questions of your own to ask. I was always really interested in the culture of the startup, so I asked about their core values and such. It&rsquo;s also useful to know what kind of problems you&rsquo;ll be working on. Lastly, after being asked the <em>&ldquo;Explain something to me&rdquo;</em> question, I realized how useful it was in working out how someone thinks. If I was interviewing with an engineer, I made sure to ask that to see how well he/she could teach.</p>

<p>After your phone screen, you should get a response in a few days. If you don&rsquo;t, be sure to email back and ask for a status update. Some startups will offer you the position right after the phone screen, whereas others will ask for further phone screens, or request that you come in.</p>

<p><strong>In-person Interviews</strong></p>

<p>This is the fun part. You get flown around the country, with private drivers and fancy hotel rooms. Don&rsquo;t go <em>too</em> crazy the night before your interview, and make sure you brush up on things you might need to know. Data Structure questions came up a lot, but the in person interview varies pretty wildly between different startups. Some will ask you to build a small application, or pair program with an engineer (these are awesome). Others will sit you down at a desk for 6 hours with different engineers coming in and out asking you questions (these aren&rsquo;t so awesome).</p>

<p>If you already have offers from other startups in the area you&rsquo;re flying too, it&rsquo;s not a bad idea to try and meet the team over dinner. I did that with Aidin, and realized that I&rsquo;d really enjoy working with the team over summer.</p>

<p>Like the phone screens, try to schedule the startups you don&rsquo;t really want before the one&rsquo;s you do want.</p>

<p><strong>Your offers</strong></p>

<p>By this point, you&rsquo;ve probably got a bunch of offers and you need to work out exactly where you want to intern. As clichéd as they are, pros-cons lists work rather well here. Make sure you know what you want from the internship, and what&rsquo;s most important to you. I really wanted to be in NY or SF, doing something Rails related, and big data was a plus as well.</p>

<p>Don&rsquo;t be afraid to hop on another phone call with an engineer to ask them any questions about what you&rsquo;ll be doing.</p>

<p>Money should be important, but not the most important thing, especially as a freshman.You&rsquo;re going for experience, not the money. That being said, make sure you can actually live comfortably wherever you&rsquo;re going. If you&rsquo;re going to somewhere like NY or SF, keep in mind how high the cost of living is there, and don&rsquo;t forget to account for tax.</p>

<p>Once you&rsquo;ve decided where you want to be this summer, send them an email to get the paperwork started. Politely decline your other offers (keep in mind you might want to work for them next year!), and thank them for their time. Nothing sucks more than a stock rejection, so try and actually put some effort into it.</p>

<p><strong>Need help?</strong></p>

<p>If you have any questions about the process, feel free to shoot me an <a href="mailto:%20chintanparikh@gatech.edu">email</a>.</p>

<p>Also, if you&rsquo;re looking for some neat startups, these startups really stood out to me. They&rsquo;ve got an amazing team, and are definitely places that I&rsquo;d suggest working at over the summer.</p>

<ul>
<li><a href="https://www.plaid.io/">Plaid</a> &ndash; While I absolutely bombed my phone screen (I think it was my second phone interview), William made me feel extremely comfortable, and it&rsquo;s clear that they&rsquo;re remarkably smart. They also <a href="http://techcrunch.com/2013/04/28/rambler-takes-home-the-disrupt-ny-2013-hackathon-grand-prize-radical-and-learn-to-drive-are-runners-up/">won the TechCrunch Disrupt Hackathon</a></li>
<li><a href="http://www.myaidin.com/">Aidin</a> &ndash; It&rsquo;d be hard to find a cooler team to work with over the summer. These guys are super smart, and are disrupting an industry that is stuck in the stone ages. They&rsquo;re also saving lives, and that really appealed to me.</li>
<li><a href="http://enigma.io/">Enigma</a> &ndash; These guys were awesome. I got an offer from them, and I know that I wouldn&rsquo;t have regretted it for a second had I accepted. They&rsquo;re big on big data, and are an amazing group of people. Oh, and they <a href="http://techcrunch.com/2013/05/01/and-the-winner-of-techcrunch-disrupt-ny-2013-is-enigma/">won TechCrunch Disrupt&rsquo;s Startup Battlefield</a></li>
<li><a href="https://www.khanacademy.org/">Khan Academy</a> &ndash; EdTech startups kick ass. These guys kick ass. And they have an absolutely amazing team behind them. I really enjoyed their interviews and it really felt like me and the interviewer were working through a problem together, instead of an interview.</li>
</ul>

]]></content>
  </entry>
  
</feed>
